import * as svelte_store from 'svelte/store';
import TimescapeManager, { Options, DateType, RangeOptions } from './index.js';
export { $NOW as NOW } from './index.js';

declare const createTimescape: (options?: Options) => {
    readonly _manager: TimescapeManager;
    readonly inputProps: (element: HTMLInputElement, type: DateType) => HTMLInputElement | undefined;
    readonly rootProps: (element: HTMLElement) => void;
    readonly options: svelte_store.Writable<Options>;
    readonly update: (this: void, updater: svelte_store.Updater<Options>) => void;
};
declare const createTimescapeRange: (options?: RangeOptions) => {
    readonly fromInputProps: (element: HTMLInputElement, type: DateType) => HTMLInputElement | undefined;
    readonly toInputProps: (element: HTMLInputElement, type: DateType) => HTMLInputElement | undefined;
    readonly from: {
        readonly inputProps: (element: HTMLInputElement, type: DateType) => HTMLInputElement | undefined;
        readonly options: svelte_store.Writable<Options>;
        readonly update: (this: void, updater: svelte_store.Updater<Options>) => void;
    };
    readonly to: {
        readonly inputProps: (element: HTMLInputElement, type: DateType) => HTMLInputElement | undefined;
        readonly options: svelte_store.Writable<Options>;
        readonly update: (this: void, updater: svelte_store.Updater<Options>) => void;
    };
    readonly rangeRootProps: (element: HTMLElement) => void;
};

export { DateType, Options, RangeOptions, createTimescape, createTimescapeRange };
