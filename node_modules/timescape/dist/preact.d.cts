import TimescapeManager, { Options, DateType, RangeOptions } from './index.cjs';
export { $NOW } from './index.cjs';
import { MutableRef } from 'preact/hooks';
import * as signals from '@preact/signals';

declare const useTimescape: (options?: Options) => {
    readonly _manager: TimescapeManager;
    readonly getInputProps: (type: DateType, opts?: {
        ref?: MutableRef<HTMLInputElement | null>;
        autofocus?: boolean;
    }) => {
        ref: (element: HTMLInputElement | null) => void;
    };
    readonly getRootProps: () => {
        ref: (element: HTMLElement | null) => void | null;
    };
    readonly options: signals.Signal<Options>;
};
declare const useTimescapeRange: (options?: RangeOptions) => {
    readonly getRootProps: () => {
        ref: (element: HTMLElement | null) => void;
    };
    readonly from: {
        readonly getInputProps: (type: DateType, opts?: {
            ref?: MutableRef<HTMLInputElement | null>;
            autofocus?: boolean;
        }) => {
            ref: (element: HTMLInputElement | null) => void;
        };
        readonly options: signals.Signal<Options>;
    };
    readonly to: {
        readonly getInputProps: (type: DateType, opts?: {
            ref?: MutableRef<HTMLInputElement | null>;
            autofocus?: boolean;
        }) => {
            ref: (element: HTMLInputElement | null) => void;
        };
        readonly options: signals.Signal<Options>;
    };
};

export { DateType, Options, RangeOptions, useTimescape, useTimescapeRange };
